# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.

# n = int(input("Количество элементов n множества: "))
# nSet = set()

# for i in range(n):
#     element = int(input("Введите элемент массива n: "))
#     nSet.add(element)

# m = int(input("Количество элементов m множества: "))
# mSet = set()

# for i in range(m):
#     element = int(input("Введите элемент массива m: "))
#     mSet.add(element)

# print(f"Множество n: {nSet}")
# print(f"Множество m: {mSet}")

# mnSet = set()

# for elementN in nSet:
#     for elementM in mSet:
#         if elementN == elementM:
#             mnSet.add(elementN)

# print(f"одинаковые элемента массивов m и n: {mnSet}")


# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. 
# Она растёт на круглой грядке, причём кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. 
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, 
# находясь перед некоторым кустом заданной во входном файле грядки.

n = int(input("количество кустов: "))
arr = list()
for i in range(n):
    x = int(input("количество ягод: "))
    arr.append(x)

arr_count = list()
for i in range(len(arr) - 1):
    arr_count.append(arr[i - 1] + arr[i] + arr[i + 1])
arr_count.append(arr[-2] + arr[-1]  + arr[0])
print(max(arr_count))